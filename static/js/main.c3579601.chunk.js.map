{"version":3,"sources":["components/todologo.svg","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","localStorage","getItem","JSON","parse","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","map","elem","id","name","allData","Date","getTime","toString","useEffect","setItem","stringify","className","src","todo","alt","type","placeholder","value","onChange","e","target","title","onClick","newEditItem","find","console","log","editItem","updatedItems","filter","deleteItem","data-sm-link-text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,G,MAAA,IAA0B,sC,OCmI1BA,EAtHF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAVfG,aAAaC,QAAQ,SAEvBC,KAAKC,MAAMH,aAAaC,QAAQ,UAEhC,IAMT,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCR,oBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAoCV,mBAAS,MAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KAEMC,EAAU,WACd,GAAKZ,EACE,GAAIA,IAAcQ,EACvBD,EACED,EAAMO,KAAI,SAACC,GACT,OAAIA,EAAKC,KAAOL,EACP,2BAAKI,GAAZ,IAAkBE,KAAMhB,IAEnBc,MAGXL,GAAgB,GAChBR,EAAa,IACbU,EAAc,UACT,CACL,IAAMM,EAAU,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMhB,GAC7DO,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBhB,EAAa,WA8BjB,OAHAoB,qBAAU,WACRnB,aAAaoB,QAAQ,QAASlB,KAAKmB,UAAUjB,MAC5C,CAACA,IAEF,mCACE,qBAAKkB,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKC,IAAKC,EAAMC,IAAI,aACpB,sEAEF,sBAAKH,UAAU,WAAf,UACE,uBACEI,KAAK,OACLC,YAAY,2BACZC,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOH,UAExCtB,EACC,mBACEgB,UAAU,qBACVU,MAAM,WACNC,QAASvB,IAGX,mBACEY,UAAU,qBACVU,MAAM,cACNC,QAASvB,OAIf,qBAAKY,UAAU,YAAf,SACGlB,EAAMO,KAAI,SAACC,GACV,OACE,sBAAKU,UAAU,WAAf,UACE,6BAAKV,EAAKE,OACV,sBAAKQ,UAAU,WAAf,UACE,mBACEA,UAAU,sBACVU,MAAM,YACNC,QAAS,kBAvDZ,SAACpB,GAChB,IAAIqB,EAAc9B,EAAM+B,MAAK,SAACvB,GAC5B,OAAOA,EAAKC,KAAOA,KAErBuB,QAAQC,IAAIH,GACZ3B,GAAgB,GAChBR,EAAamC,EAAYpB,MACzBL,EAAcI,GAgDmByB,CAAS1B,EAAKC,OAE/B,mBACES,UAAU,2BACVU,MAAM,cACNC,QAAS,kBArEV,SAACpB,GAClBuB,QAAQC,IAAIxB,GACZ,IAAM0B,EAAenC,EAAMoC,QAAO,SAAC5B,GACjC,OAAOC,IAAOD,EAAKC,MAGrBR,EAASkC,GA+DwBE,CAAW7B,EAAKC,YAXND,EAAKC,SAkB1C,qBAAKS,UAAU,YAAf,SACE,wBACEA,UAAU,eACVoB,oBAAkB,aAClBT,QA7DM,WAChB5B,EAAS,KAyDD,SAKE,0DCpHCsC,EAJH,WACV,OAAO,cAAC,EAAD,KCSMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.c3579601.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todologo.3e64a886.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport todo from \"./todologo.svg\";\r\n\r\nconst getLocalItems = () => {\r\n  let list = localStorage.getItem(\"lists\");\r\n  if (list) {\r\n    return JSON.parse(localStorage.getItem(\"lists\"));\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Todo = () => {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalItems());\r\n  const [toggleSubmit, setToggleSubmit] = useState(true);\r\n  const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n  const addItem = () => {\r\n    if (!inputData) {\r\n    } else if (inputData && !toggleSubmit) {\r\n      setItems(\r\n        items.map((elem) => {\r\n          if (elem.id === isEditItem) {\r\n            return { ...elem, name: inputData };\r\n          }\r\n          return elem;\r\n        })\r\n      );\r\n      setToggleSubmit(true);\r\n      setInputData(\"\");\r\n      setIsEditItem(null);\r\n    } else {\r\n      const allData = { id: new Date().getTime().toString(), name: inputData };\r\n      setItems([...items, allData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    console.log(id);\r\n    const updatedItems = items.filter((elem) => {\r\n      return id !== elem.id;\r\n    });\r\n\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  const editItem = (id) => {\r\n    let newEditItem = items.find((elem) => {\r\n      return elem.id === id;\r\n    });\r\n    console.log(newEditItem);\r\n    setToggleSubmit(false);\r\n    setInputData(newEditItem.name);\r\n    setIsEditItem(id);\r\n  };\r\n\r\n  const removeAll = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"lists\", JSON.stringify(items));\r\n  }, [items]);\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <img src={todo} alt=\"todologo\" />\r\n            <figcaption>Add Your Todo Here ✌</figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"✍ Add Todo Items...\"\r\n              value={inputData}\r\n              onChange={(e) => setInputData(e.target.value)}\r\n            />\r\n            {toggleSubmit ? (\r\n              <i\r\n                className=\"fa fa-plus add-btn\"\r\n                title=\"Add Item\"\r\n                onClick={addItem}\r\n              ></i>\r\n            ) : (\r\n              <i\r\n                className=\"fa fa-edit add-btn\"\r\n                title=\"Update Item\"\r\n                onClick={addItem}\r\n              ></i>\r\n            )}\r\n          </div>\r\n          <div className=\"showItems\">\r\n            {items.map((elem) => {\r\n              return (\r\n                <div className=\"eachItem\" key={elem.id}>\r\n                  <h3>{elem.name}</h3>\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      className=\"far fa-edit add-btn\"\r\n                      title=\"Edit Item\"\r\n                      onClick={() => editItem(elem.id)}\r\n                    ></i>\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      title=\"Delete Item\"\r\n                      onClick={() => deleteItem(elem.id)}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"Remove All\"\r\n              onClick={removeAll}\r\n            >\r\n              <span>CHECK LIST</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import Todo from \"./components/todo.js\";\n\nconst App = () => {\n  return <Todo />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}